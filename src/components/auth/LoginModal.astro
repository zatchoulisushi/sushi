---
import { X, Mail, Lock, User, Phone } from 'lucide-astro';
---

<div id="auth-modal" class="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 hidden items-center justify-center p-4">
  <div class="bg-dark-900 rounded-2xl max-w-md w-full p-8 relative">
    <button id="close-auth-modal" class="absolute top-4 right-4 p-2 hover:bg-white/10 rounded-full transition-colors">
      <X size={20} class="text-white/70" />
    </button>

    <!-- Login Form -->
    <div id="login-form" class="auth-form">
      <h2 class="text-2xl font-bold text-white mb-6">Connexion</h2>
      
      <form id="login-form-element" class="space-y-4">
        <div class="relative">
          <Mail size={20} class="absolute left-3 top-1/2 transform -translate-y-1/2 text-white/50" />
          <input 
            type="email" 
            name="email" 
            placeholder="Email" 
            required 
            class="w-full pl-12 pr-4 py-3 bg-white/5 border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:border-primary-600"
          />
        </div>
        
        <div class="relative">
          <Lock size={20} class="absolute left-3 top-1/2 transform -translate-y-1/2 text-white/50" />
          <input 
            type="password" 
            name="password" 
            placeholder="Mot de passe" 
            required 
            class="w-full pl-12 pr-4 py-3 bg-white/5 border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:border-primary-600"
          />
        </div>
        
        <button type="submit" class="w-full py-3 bg-gradient-to-r from-primary-600 to-primary-700 text-white font-semibold rounded-xl hover:scale-105 transition-transform">
          Se connecter
        </button>
      </form>
      
      <div class="mt-6 text-center">
        <button id="show-register" class="text-primary-500 hover:text-primary-400 transition-colors">
          Pas encore de compte ? S'inscrire
        </button>
      </div>
    </div>

    <!-- Register Form -->
    <div id="register-form" class="auth-form hidden">
      <h2 class="text-2xl font-bold text-white mb-6">Inscription</h2>
      
      <form id="register-form-element" class="space-y-4">
        <div class="grid grid-cols-2 gap-4">
          <div class="relative">
            <User size={20} class="absolute left-3 top-1/2 transform -translate-y-1/2 text-white/50" />
            <input 
              type="text" 
              name="firstName" 
              placeholder="Pr√©nom" 
              required 
              class="w-full pl-12 pr-4 py-3 bg-white/5 border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:border-primary-600"
            />
          </div>
          
          <div class="relative">
            <User size={20} class="absolute left-3 top-1/2 transform -translate-y-1/2 text-white/50" />
            <input 
              type="text" 
              name="lastName" 
              placeholder="Nom" 
              required 
              class="w-full pl-12 pr-4 py-3 bg-white/5 border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:border-primary-600"
            />
          </div>
        </div>
        
        <div class="relative">
          <Mail size={20} class="absolute left-3 top-1/2 transform -translate-y-1/2 text-white/50" />
          <input 
            type="email" 
            name="email" 
            placeholder="Email" 
            required 
            class="w-full pl-12 pr-4 py-3 bg-white/5 border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:border-primary-600"
          />
        </div>
        
        <div class="relative">
          <Phone size={20} class="absolute left-3 top-1/2 transform -translate-y-1/2 text-white/50" />
          <input 
            type="tel" 
            name="phone" 
            placeholder="T√©l√©phone" 
            required 
            class="w-full pl-12 pr-4 py-3 bg-white/5 border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:border-primary-600"
          />
        </div>
        
        <div class="relative">
          <Lock size={20} class="absolute left-3 top-1/2 transform -translate-y-1/2 text-white/50" />
          <input 
            type="password" 
            name="password" 
            placeholder="Mot de passe" 
            required 
            minlength="6"
            class="w-full pl-12 pr-4 py-3 bg-white/5 border border-white/20 rounded-xl text-white placeholder-white/50 focus:outline-none focus:border-primary-600"
          />
        </div>
        
        <button type="submit" class="w-full py-3 bg-gradient-to-r from-primary-600 to-primary-700 text-white font-semibold rounded-xl hover:scale-105 transition-transform">
          S'inscrire
        </button>
      </form>
      
      <div class="mt-6 text-center">
        <button id="show-login" class="text-primary-500 hover:text-primary-400 transition-colors">
          D√©j√† un compte ? Se connecter
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  // Note: Authentication is not available in the static Content Layer version
  
  const modal = document.getElementById('auth-modal');
  const closeBtn = document.getElementById('close-auth-modal');
  const loginForm = document.getElementById('login-form');
  const registerForm = document.getElementById('register-form');
  const showRegisterBtn = document.getElementById('show-register');
  const showLoginBtn = document.getElementById('show-login');

  // Show message about authentication not being available
  if (loginForm && registerForm) {
    const message = `
      <div class="text-center p-8">
        <div class="text-4xl mb-4">üöß</div>
        <h3 class="text-xl font-bold text-white mb-4">Authentification non disponible</h3>
        <p class="text-white/70 mb-6">
          L'authentification n√©cessite un backend qui n'est pas disponible dans cette version statique utilisant Astro Content Layer.
        </p>
        <p class="text-white/60 text-sm">
          Pour activer l'authentification, impl√©mentez un syst√®me d'auth c√¥t√© serveur ou utilisez Astro en mode SSR.
        </p>
      </div>
    `;
    
    loginForm.innerHTML = message;
    registerForm.innerHTML = message;
  }

  const modal = document.getElementById('auth-modal');
  const closeBtn = document.getElementById('close-auth-modal');
  const loginForm = document.getElementById('login-form');
  const registerForm = document.getElementById('register-form');
  const showRegisterBtn = document.getElementById('show-register');
  const showLoginBtn = document.getElementById('show-login');
  const loginFormElement = document.getElementById('login-form-element');
  const registerFormElement = document.getElementById('register-form-element');

  // Modal controls
  closeBtn?.addEventListener('click', () => {
    modal?.classList.add('hidden');
    modal?.classList.remove('flex');
  });

  modal?.addEventListener('click', (e) => {
    if (e.target === modal) {
      modal.classList.add('hidden');
      modal.classList.remove('flex');
    }
  });

  // Form switching
  showRegisterBtn?.addEventListener('click', () => {
    loginForm?.classList.add('hidden');
    registerForm?.classList.remove('hidden');
  });

  showLoginBtn?.addEventListener('click', () => {
    registerForm?.classList.add('hidden');
    loginForm?.classList.remove('hidden');
  });

  // Login form submission
  loginFormElement?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target as HTMLFormElement);
    
    try {
      await AuthService.signIn(
        formData.get('email') as string,
        formData.get('password') as string
      );
      
      modal?.classList.add('hidden');
      modal?.classList.remove('flex');
      window.location.reload();
    } catch (error) {
      alert('Erreur de connexion: ' + (error as Error).message);
    }
  });

  // Register form submission
  registerFormElement?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target as HTMLFormElement);
    
    try {
      await AuthService.signUp(
        formData.get('email') as string,
        formData.get('password') as string,
        {
          firstName: formData.get('firstName') as string,
          lastName: formData.get('lastName') as string,
          phone: formData.get('phone') as string,
        }
      );
      
      alert('Inscription r√©ussie ! V√©rifiez votre email pour confirmer votre compte.');
      modal?.classList.add('hidden');
      modal?.classList.remove('flex');
    } catch (error) {
      alert('Erreur d\'inscription: ' + (error as Error).message);
    }
  });

  // Global function to show auth modal
  (window as any).showAuthModal = () => {
    modal?.classList.remove('hidden');
    modal?.classList.add('flex');
  };

  // Auto-inject modal into page
  if (typeof window !== 'undefined' && !document.getElementById('auth-modal-container')) {
    const container = document.createElement('div');
    container.id = 'auth-modal-container';
    container.innerHTML = document.currentScript?.parentElement?.outerHTML || '';
    document.body.appendChild(container);
  }
</script>
</div>