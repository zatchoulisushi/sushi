---
import AdminLayout from '../../components/admin/AdminLayout.astro';
import { TrendingUp, Users, Package, DollarSign } from 'lucide-astro';
---

<AdminLayout title="Tableau de bord" activeSection="dashboard">
  <!-- Stats Cards -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <div class="stat-card">
      <div class="stat-icon bg-green-600">
        <DollarSign size={24} />
      </div>
      <div>
        <p class="text-white/60 text-sm">Chiffre d'affaires</p>
        <p class="text-2xl font-bold text-white" id="revenue-stat">0‚Ç¨</p>
        <p class="text-green-400 text-sm">+12% ce mois</p>
      </div>
    </div>

    <div class="stat-card">
      <div class="stat-icon bg-blue-600">
        <Package size={24} />
      </div>
      <div>
        <p class="text-white/60 text-sm">Commandes</p>
        <p class="text-2xl font-bold text-white" id="orders-stat">0</p>
        <p class="text-blue-400 text-sm">+8% ce mois</p>
      </div>
    </div>

    <div class="stat-card">
      <div class="stat-icon bg-purple-600">
        <Users size={24} />
      </div>
      <div>
        <p class="text-white/60 text-sm">Clients</p>
        <p class="text-2xl font-bold text-white" id="customers-stat">0</p>
        <p class="text-purple-400 text-sm">+15% ce mois</p>
      </div>
    </div>

    <div class="stat-card">
      <div class="stat-icon bg-orange-600">
        <TrendingUp size={24} />
      </div>
      <div>
        <p class="text-white/60 text-sm">Panier moyen</p>
        <p class="text-2xl font-bold text-white" id="avg-order-stat">0‚Ç¨</p>
        <p class="text-orange-400 text-sm">+5% ce mois</p>
      </div>
    </div>
  </div>

  <!-- Recent Orders -->
  <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
    <div class="admin-card">
      <h2 class="text-xl font-bold mb-6">Commandes r√©centes</h2>
      <div id="recent-orders" class="space-y-4">
        <!-- Orders will be loaded here -->
      </div>
    </div>

    <!-- Popular Products -->
    <div class="admin-card">
      <h2 class="text-xl font-bold mb-6">Produits populaires</h2>
      <div id="popular-products" class="space-y-4">
        <!-- Products will be loaded here -->
      </div>
    </div>
  </div>
</AdminLayout>

<style>
  .stat-card {
    @apply p-6 bg-white/5 backdrop-blur-sm rounded-2xl border border-white/10 flex items-center space-x-4;
  }
  
  .stat-icon {
    @apply w-12 h-12 rounded-xl flex items-center justify-center text-white;
  }
  
  .admin-card {
    @apply p-6 bg-white/5 backdrop-blur-sm rounded-2xl border border-white/10;
  }
</style>

<script>
  // Static admin dashboard - no runtime data loading in static site mode
  
  async function loadDashboardData() {
    console.warn('Admin dashboard - Static site mode: Dashboard data not available');
    
    // Show placeholder stats
    displayStats([]);
    displayRecentOrders([]);
    
    // Display message about static mode
    showStaticModeMessage();
  }

  function showStaticModeMessage() {
    const container = document.getElementById('recent-orders-container');
    if (container) {
      container.innerHTML = `
        <div class="text-center py-12 text-white/60">
          <div class="text-4xl mb-4">üìä</div>
          <p class="mb-2">Tableau de bord administrateur</p>
          <p class="text-sm">Les donn√©es en temps r√©el ne sont pas disponibles en mode site statique.</p>
          <p class="text-sm">Configurez une base de donn√©es pour les fonctionnalit√©s administratives.</p>
        </div>
      `;
    }
  }

  function displayRecentOrders(orders) {
    const container = document.getElementById('recent-orders');
    if (!container) return;

    container.innerHTML = orders.map(order => `
      <div class="flex items-center justify-between p-4 bg-white/5 rounded-xl">
        <div>
          <p class="font-semibold text-white">#${order.order_number}</p>
          <p class="text-sm text-white/60">${new Date(order.created_at).toLocaleDateString('fr-FR')}</p>
        </div>
        <div class="text-right">
          <p class="font-bold text-primary-500">${order.total_amount.toFixed(2)}‚Ç¨</p>
          <span class="px-2 py-1 text-xs rounded-full ${getStatusColor(order.status)}">${getStatusText(order.status)}</span>
        </div>
      </div>
    `).join('');
  }

  function displayStats(orders) {
    const totalRevenue = orders.reduce((sum, order) => sum + order.total_amount, 0);
    const avgOrder = orders.length > 0 ? totalRevenue / orders.length : 0;

    document.getElementById('revenue-stat').textContent = `${totalRevenue.toFixed(0)}‚Ç¨`;
    document.getElementById('orders-stat').textContent = orders.length.toString();
    document.getElementById('avg-order-stat').textContent = `${avgOrder.toFixed(2)}‚Ç¨`;
  }

  function getStatusColor(status) {
    const colors = {
      pending: 'bg-yellow-600/20 text-yellow-400',
      confirmed: 'bg-blue-600/20 text-blue-400',
      preparing: 'bg-orange-600/20 text-orange-400',
      ready: 'bg-green-600/20 text-green-400',
      delivered: 'bg-green-600/20 text-green-400',
      cancelled: 'bg-red-600/20 text-red-400'
    };
    return colors[status] || colors.pending;
  }

  function getStatusText(status) {
    const texts = {
      pending: 'En attente',
      confirmed: 'Confirm√©e',
      preparing: 'En pr√©paration',
      ready: 'Pr√™te',
      delivered: 'Livr√©e',
      cancelled: 'Annul√©e'
    };
    return texts[status] || status;
  }

  // Load data on page load
  loadDashboardData();
</script>
</div>